@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900);

::-webkit-scrollbar {
  width: 0;
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  color: #2e2e2e;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #fff;
  font-family: "Inter", sans-serif;
}
.wrapper {
  position: relative;
  height: 100vh;
  width: 100%;
  overflow: hidden;
  padding: 23px 0;
  display: flex;
}
@media (min-width:768px) {
  .wrapper {
    height: 36rem;
    width: 20rem;
    border-radius: 40px;
    border: 10px solid #2e2e2e;
  }
}
.wrapper .screen {
  flex: 1;
  min-width: 100%;
  transition: all 0.3s;
}
.wrapper.show-category .home-screen {
  transform: translateX(-100%);
}
.wrapper.show-category .category-screen {
  transform: translateX(-100%);
}
.wrapper.show-category .screen-backdrop {
  transform: translate(-50%, -60%);
}
.screen-backdrop {
  width: 135%;
  height: 19rem;
  position: absolute;
  top: 0;
  left: 50%;
  z-index: -1;
  transform: translateX(-50%);
  border-radius: 0 0 50% 50%;
  background-color: #f9ea85;
  transition: all 0.3s;
}
.head-wrapper {
  padding: 0 30px;
}
.menu-btn {
  width: 2rem;
  cursor: pointer;
  color: #2e2e2e;
}
.welcome {
  display: flex;
  justify-content: space-between;
  margin-top: 12px;
}
.welcome h1 {
  font-size: 1.5rem;
}
.welcome p {
  font-weight: 500;
}
.welcome .img {
  position: relative;
}
.welcome .img img {
  width: 5rem;
}
.welcome .img .backdrop {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 3.8rem;
  height: 4rem;
  border-radius: 50%;
  background-color: #fdfbe5;
  z-index: -1;
}
.categories-wrapper {
  margin-top: 0.5rem;
  height: calc(100% - 8rem);
  padding: 0 25px 20px;
  overflow: auto;
}
.categories {
  padding-top: 1.4rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.categories .category {
  background-color: #fff;
  border-radius: 0.5rem;
  padding: 0.8rem;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  box-shadow: 0 10px 20px 5px #00000023;
  transition: all 0.3s;
}
.categories .category:hover {
  transform: translateY(-10px);
}
.category .left {
  display: flex;
  gap: 1.5rem;
  align-items: center;
}
.category .left img {
  width: 2.5rem;
}
.category .content h1 {
  font-size: 1.2rem;
}
.category .content p {
  color: #2e2e2e;
  font-size: 0.6rem;
  opacity: 0.6;
}
.category .options {
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;
}
.category:hover .options {
  opacity: 1;
  visibility: visible;
}
.category .toggle-btn {
  width: 1.3rem;
  cursor: pointer;
  opacity: 0.6;
}
.category-screen .head-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.category-screen .head-wrapper svg {
  width: 2rem;
  cursor: pointer;
}
.category-details {
  padding: 0 25px;
  margin-top: 5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}
.category-details img {
  width: 3.5rem;
}
.category-details .details p {
  opacity: 0.6;
}
.tasks-wrapper {
  padding: 0 25px;
  margin-top: 1rem;
  height: calc(100% - 12rem);
  padding-bottom: 20px;
  overflow: auto;
}
.tasks {
  padding-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
}
.task-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.task-wrapper label.task {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  background: #f9f9f9;
  padding: 8px 7px;
  border-radius: 8px;
  transition: all 0.3s;
  cursor: pointer;
  flex: 1;
  width: 100%;
    box-sizing: border-box;
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
  flex-wrap: wrap; 
}
.task-wrapper label.task p {
  flex: 1;
  font-size: 0.8rem;
  font-weight: 500;
  white-space: normal;
  word-break: break-word; /* keep breaking words if needed */
  overflow-wrap: break-word; /* allows word wrapping */
  hyphens: auto; /* optional: adds hyphens on break */
}
.no-tasks {
  margin-top: 5rem;
  text-align: center;
  font-size: 1.23rem;
  opacity: 0.6;
}



.task input {
  display: none;
}
.task .checkmark {
  width: 1rem;
  height: 1rem;
  border: 1px solid #2e2e2e;
  border-radius: 2px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}
.task .checkmark::after {
  content: '';
  font-size: 0.8rem;
  color: #2e2e2e;
  opacity: 0;
  transition: opacity 0.3s ease;
}
.task:hover .checkmark::after {
  content: '✔';
  opacity: 0.8;
}
.task input:checked ~ .checkmark {
  background-color: #2e2e2e;
}
.task input:checked ~ .checkmark::after {
  content: '✔';
  color: #fff;
  opacity: 1;
}
.task input:checked ~ p {
  text-decoration: line-through;
  opacity: 0.6;
}



.task-wrapper .delete {
  min-width: 2rem;
  height: 2rem;
  padding: 0.5rem;
  border-radius: 50%;
  color: #2e2e2e;
  cursor: pointer;
  background-color: rgba(0, 0, 0, 0.031);
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;
  display: flex;
  justify-content: center;
  align-items: center;
}
.task-wrapper:hover .delete {
  visibility: visible;
  opacity: 1;
}
.task-wrapper .delete svg {
  width: 1rem;
  height: 1rem;
  fill: currentColor;
  display: block;
}
.task-wrapper .delete:hover {
  color: red;
  background-color: rgba(0, 0, 0, 0.1);
}
.add-task-btn {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: #f9ea85;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s;
  /* transform: rotate(0deg);   /* ← RESET default rotation *
  z-index: 1; */
}
.add-task-btn.active {
  z-index: 1;
  /*bottom: 16rem;*/
  /* transform: rotate(45deg); */
}
.add-task-btn:hover {
  transform: scale(1.1);
}
.add-task-btn svg {
  width: 2rem;
  color: #2e2e2e;
}

/* Consistent Add Task popup */
.add-task {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  background: white;
  padding: 1.5rem;
  width: 90%;
  max-width: 250px;
  border-radius: 1rem;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  display: none;
  flex-direction: column;
  gap: 1rem;
  box-sizing: border-box;
}
.add-task.active {
  display: flex;
}
.add-task h2 {
  margin: 0;
  font-size: 1.4rem;
  text-align: center;
}
.add-task input {
  padding: 0.8rem;
  font-size: 1rem;
  border-radius: 0.5rem;
  border: 1px solid #ccc;
  width: 100%;
  box-sizing: border-box;
}
.add-task .btns {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
}
.add-task .btns button {
  padding: 0.75rem;
  font-size: 1rem;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: background 0.3s ease;
}
.add-task .btns .add-btn {
  background-color: #28a745;
  color: white;
}
.add-task .btns .cancel-btn {
  background-color: #dc3545;
  color: white;
}

/* Shared overlay */
.black-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(2px);
  z-index: 5;
  display: none;
}
.black-backdrop.active {
  display: block;
}

/* Add Category modal */
.add-category {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  background: white;
  padding: 1.5rem;
  width: 90%;
  max-width: 250px;
  border-radius: 1rem;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  display: none;
  flex-direction: column;
  gap: 1rem;
  box-sizing: border-box;
  overflow: hidden;
}
.add-category.active {
  display: flex;
}
.add-category h2 {
  margin: 0;
  font-size: 1.4rem;
  text-align: center;
}
.add-category input {
  padding: 0.8rem;
  font-size: 1rem;
  border-radius: 0.5rem;
  border: 1px solid #ccc;
  width: 100%;
  box-sizing: border-box;
}
.add-category button {
  padding: 0.75rem;
  font-size: 1rem;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: background 0.3s ease;
}
.add-category .add-category-btn {
  background-color: #28a745;
  color: white;
}
.add-category .cancel-category-btn {
  background-color: #dc3545;
  color: white;
}
.wrapper .add-category.active {
  display: flex;
}

/* delete category popup */
.delete-category-confirmation {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: white;
  z-index: 20;
  width: 90%;
  max-width: 250px;
  padding: 1.5rem;
  border-radius: 1rem;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  display: none;
  flex-direction: column;
  gap: 1rem;
  text-align: center;
}
.delete-category-confirmation.active {
  display: flex;
}
.delete-category-confirmation .btns {
  display: flex;
  gap: 1rem;
  justify-content: space-around;
}
.delete-category-confirmation button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  font-size: 1rem;
  transition: background 0.3s ease;
}
.delete-category-confirmation .confirm-delete {
  background-color: #dc3545;
  color: white;
}
.delete-category-confirmation .cancel-delete {
  background-color: #ccc;
  color: black;
}

.category .options {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}
.category:hover .options {
  opacity: 1;
  pointer-events: auto;
}
.delete-category-icon {
  width: 24px;
  height: 24px;
  cursor: pointer;
  color: #888;
}
.delete-category-icon svg {
  width: 100%;
  height: 100%;
}


/* edit task css */
.task .actions {
  display: flex;
  gap: 10px;
  align-items: center;
  margin-left: auto;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.task:hover .actions {
  opacity: 1;
}

.task .edit,
.task .delete {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color 0.3s ease;
}

.task .edit svg,
.task .delete svg {
  width: 20px;
  height: 20px;
  pointer-events: none;
}

/* Hover colors */
.task .edit:hover {
  color: #007bff; /* Blue on hover */
}

.task .delete:hover {
  color: red; /* Red on hover */
}

